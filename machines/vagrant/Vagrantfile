# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "theurbanpenguin/noble_server"
  config.vm.disk :disk, primary:true,  size: "50GB"
  config.vm.provider "virtualbox" do |vb|
    vb.cpus = 2
    vb.memory = 8192
  end

  username, keyfile = File.open('user.txt') { |f| f.readlines }.map(&:strip)
  
  File.readlines('machines.txt').each do |line|
    hostname, ip = line.strip.split(' ')
    config.vm.define hostname do |n|
      n.vm.hostname = hostname
      n.vm.network "public_network", ip: ip
      n.vm.synced_folder ".", "/vagrant", disabled: "true"

      n.vm.provision "shell", inline: <<-SHELL
        useradd -m  -s /bin/bash  #{username}
        echo '#{username} ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
        # weirdly these two commands fail without sudo even though the provisioner is running as root
        sudo mkdir -p /home/#{username}/.ssh
        sudo chmod 700 /home/#{username}/.ssh
      SHELL

      # copy public key and tell kubeadmn which IP to advertise the API server on as it will default to the NAT interface otherwise
      n.vm.provision "file", source: "~/.ssh/#{keyfile}", destination: "/tmp/remote.pub"
      n.vm.provision "shell", inline: <<-SHELL
        cat //tmp/remote.pub >> /home/#{username}/.ssh/authorized_keys
        rm /tmp/remote.pub
        chmod 600 /home/#{username}/.ssh/authorized_keys
        chown -R #{username}:#{username} /home/#{username}
        echo "export K8S_API_IP=#{ip}" >> /home/#{username}/.bashrc
      SHELL
        # Disable swwap. This provisioner may be removed when I build a better suited base box
        n.vm.provision "shell", inline: <<-SHELL
          swapoff -a
          sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
      SHELL
     end
  end
end
