---
- name: Check if /etc/kubernetes/admin.conf exists
  ansible.builtin.stat:
    path: /etc/kubernetes/admin.conf
  register: admin_conf
  changed_when: false

- name: Run kubeadm
  when: admin_conf.stat.exists == false
  block:
    # For Vagrant boxes, kubeadm picks up the NAT interface so we need to fix that.
    # k8s_api_id should be defined in the inventory file for a vagrant control plane host.
    - name: Set k8s fact
      ansible.builtin.set_fact:
        k8s_advertise_ip: "{{ '--apiserver-advertise-address=' + k8s_api_ip }}"
      when: k8s_api_ip is defined

    - name: Run kubeadm init
      become: true
      ansible.builtin.command: "kubeadm init --pod-network-cidr={{ pod_cidr }} --kubernetes-version={{ kubernetes_kubeadm_version }}  {{ k8s_advertise_ip | default('') }}"  # noqa: line-length
      register: kubeadm_init
      changed_when: kubeadm_init.rc == 0  # noqa: literal-compare


- name: Ensure home directory .kube directory exists
  ansible.builtin.file:
    path: /home/{{ ansible_user }}/.kube
    state: directory
    mode: "0700"

# Always copy admin.conf - user should not need to edit this file
- name: Copy admin.conf to the user's home directory
  become: true
  ansible.builtin.copy:
    src: "/etc/kubernetes/admin.conf"
    dest: /home/{{ ansible_user }}/.kube/config
    remote_src: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: preserve
  changed_when: false

- name: Get the kubectl join command # TODO move to the nodes role
  ansible.builtin.command: kubeadm token create --print-join-command
  register: kubeadm_join
  changed_when: false

- name: Save the kubectl join command
  ansible.builtin.set_fact:
    kubectl_join_command: "{{ kubeadm_join.stdout }}"
  changed_when: false

- name: Show the kubectl join command
  ansible.builtin.debug:
    msg: "Join command is {{ kubectl_join_command }}"
